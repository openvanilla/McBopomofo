[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcbopomofo-data"
version = "0.1.0"
description = "McBopomofo dictionary data tools and build system"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "OpenVanilla Project", email = "info@openvanilla.org"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
]
notebook = [
    "ipywidgets",
    "jupyterlab",
    "pandas",
    "tqdm",
]

[project.scripts]
# Library modules with proper main() functions
mcbpmf-build-freq = "curation.builders.frequency_builder:main"
mcbpmf-compile = "curation.compilers.main_compiler:main"
mcbpmf-compile-plain = "curation.compilers.plain_bpmf_compiler:main"
mcbpmf-derive-phrases = "curation.builders.phrase_deriver:main"
mcbpmf-validate-scores = "curation.validators.score_validator:main"
mcbpmf-filter-non-cjk = "curation.utils.text_filter:main"
mcbpmf-audit-encoding = "scripts.audit_encoding:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["curation*"]
exclude = ["tests*", "scripts*", "bin*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["curation"]
omit = ["*/tests/*", "*/scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "B"]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "double"
